# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
  # - '**/app.locator.dart'
  # - '**/app.logger.dart'
  # - '**/app.router.dart'
  # - '**/*.g.dart'
  language:
    # strict-casts: true
    # strict-inference: true
    # strict-raw-types: true

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Style rules
    - always_declare_return_types
    - annotate_overrides
    - avoid_escaping_inner_quotes
    - avoid_function_literals_in_foreach_calls
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - avoid_void_async
    - await_only_futures
    - camel_case_types
    - camel_case_extensions
    - comment_references
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - empty_catches
    - empty_constructor_bodies
    - exhaustive_cases
    - join_return_with_assignment
    - no_duplicate_case_values
    - no_leading_underscores_for_local_identifiers
    - overridden_fields
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_contains
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_is_not_operator
    - prefer_iterable_whereType
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - recursive_getters
    - require_trailing_commas
    - sized_box_for_whitespace
    - slash_for_doc_comments
    - type_init_formals
    - unawaited_futures
    # - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_late
    - unnecessary_parenthesis
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors
    - use_rethrow_when_possible
    - void_checks
    # Error rules
    - always_use_package_imports
    - avoid_relative_lib_imports
    - cancel_subscriptions
    - control_flow_in_finally
    - hash_and_equals
    - no_self_assignments
    - throw_in_finally
    - unnecessary_statements
    - unrelated_type_equality_checks

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
